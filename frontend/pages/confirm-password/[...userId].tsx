import React, { useState } from "react";
import { MyPage } from "../../src/components/common/types";
import { useRouter } from "next/router";
import { useForm } from "react-hook-form";
import Header from "../../src/components/common/Layouts/frontend/user/Header";
import Footer from "../../src/components/common/Layouts/frontend/user/Footer";
import { toast } from "react-toastify";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useConfirmpwd } from "../../src/hooks/auth/useLogin";
import password from "../../public/assets/img/password.svg";
import style from "../patient/css/signup.module.scss";
const Confirmpassword: MyPage = () => {
  const router: any = useRouter();
  let userInfo = router?.query?.userId?.[0] || "";

  const { confirpwd } = useConfirmpwd();
  const {
    register,
    handleSubmit,
    formState: { errors },
    watch,
  }: any = useForm();

  const [inputData, setInputData] = useState({
    password: "",
    confim_password: "",
  });

  //  *************** Register handler ****************************
  const handleRegister = (data: any) => {
    // e.preventDefault();

    const payloadData = {
      ...data,
      userId: userInfo,
    };
    console.log(payloadData, data.password, userInfo);
    //if (data.password) {
    confirpwd(data.password, userInfo)
      .then((res: any) => {
        console.log(res);
        if (res.status) {
          if (res.status) {
            toast.success(res.message, {
              position: "top-right",
              autoClose: 2000,
              hideProgressBar: false,
              closeOnClick: true,
              pauseOnHover: true,
              draggable: true,
              progress: undefined,
              theme: "light",
            });
            if (res.user_type == "user") {
              router.push("/user/login");
            } else if (res.user_type == "admin") {
              router.push("/admin/login");
            }
          } else {
            toast.error(res.message, {
              position: "top-right",
              autoClose: 2000,
              hideProgressBar: false,
              closeOnClick: true,
              pauseOnHover: true,
              draggable: true,
              progress: undefined,
              theme: "light",
            });
          }
        } else {
          toast.error(res.message, {
            position: "top-right",
            autoClose: 2000,
            hideProgressBar: false,
            closeOnClick: true,
            pauseOnHover: true,
            draggable: true,
            progress: undefined,
            theme: "light",
          });
        }
      })
      .catch((e) =>
        toast.error(e, {
          position: "top-right",
          autoClose: 2000,
          hideProgressBar: false,
          closeOnClick: true,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: "light",
        })
      );
    // } else {
    //   toast.error("Please enter password", {
    //     position: "top-right",
    //     autoClose: 2000,
    //     hideProgressBar: false,
    //     closeOnClick: true,
    //     pauseOnHover: true,
    //     draggable: true,
    //     progress: undefined,
    //     theme: "light",
    //   });
    // }
  };

  // *************** Form change handler **************************
  const inputChangeHandler = (e: any) => {
    const { name, value } = e.target;
    console.log("Name value ::::::::::::::::", name, value);
    setInputData({
      ...inputData,
      [name]: value,
    });
  };

  return (
    <>
      <Head>
        <title>Confirm your password</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="main_wrapper">
        <Header />
        <div className="userauth signup">
          <div className="userauth_inner">
            <h1 className="auth_title">
              Could you fill up these mandatory <br />
              <span>details and reset your new password?</span>
            </h1>
            <div className="form_wrapper">
              <form onSubmit={handleSubmit(handleRegister)}>
                <fieldset>
                  <div className="form_field_wrapper password">
                    <Image
                      className="field_icon"
                      src={password}
                      alt="Password"
                      width={17}
                      height={20}
                      priority
                    />
                    <input
                      type="password"
                      placeholder="Password"
                      name="password"
                      onChange={inputChangeHandler}
                      {...register("password", {
                        required: "Password is required",
                      })}
                      className={`form-control field_with_icon ${
                        errors?.password?.message ? "border border-danger" : ""
                      }`}
                    />
                    {errors?.password?.message ? (
                      <div
                        className="text-danger pb-2"
                        style={{ float: "left" }}
                      >
                        {errors?.password?.message}
                      </div>
                    ) : (
                      ""
                    )}
                  </div>

                  <div className="form_field_wrapper password">
                    <Image
                      className="field_icon"
                      src={password}
                      alt="Password"
                      width={17}
                      height={20}
                      priority
                    />
                    <input
                      type="password"
                      name="confim_password"
                      placeholder="Confirm Password"
                      {...register("confim_password", {
                        required: "Confirm Password is required",
                        validate: (val: string) => {
                          console.log(val);
                          if (watch("password") != val) {
                            return "Your passwords do no match";
                          }
                        },
                      })}
                      className={`form-control field_with_icon ${
                        errors?.confim_password?.message
                          ? "border border-danger"
                          : ""
                      }`}
                    />
                    {errors?.confim_password?.message ? (
                      <div
                        className="text-danger pb-2"
                        style={{ float: "left" }}
                      >
                        {errors?.confim_password?.message}
                      </div>
                    ) : (
                      ""
                    )}
                  </div>

                  <button type="submit" className="btn btn-primary">
                    Create new password
                  </button>
                  <div className="form_field_wrapper mt-2 ">
                    <Link className="ato" href="/">
                      Back to Home page?
                    </Link>
                  </div>
                </fieldset>
              </form>
            </div>
          </div>
        </div>
        <Footer />
      </main>
    </>
  );
};
export default Confirmpassword;
Confirmpassword.Layout = "front";
